分类
	字节流
		InputStream
			FileInputStream
			FilterInputStream
				BufferedInputStream
				DataInputStream
				PushbakInputStream
			ObjectInputStream
			PipedInputStream
			SequenceInputStream
			StringBufferInputStream
			ByteArrayInputStream

		OutputStream
			FileOutputStream
			FilterOutputStream
				BufferedOutputStream
				DataOutputStream
				PrintStream
			ObjectOutputStream
			PipedOutputStream
			ByteArrayOutputStream

	字符流
		Reader
			BufferedReader
			InputStreamReader
				FileReader
			StringReader
			PipedReader
			CharArrayReader
			FilterReader
				PushbackReader

		Writer
			BufferedWriter
			OutputStreamWriter
				FileWriter
			PrinterWriter
			StringWriter
			PipedWriter
			CharArrayWriter
			FilterWriter


IO操作对象
	基本数据类型
		DataInputStream
		DataOutputStream

	缓冲操作
		BufferedInputStream
		BufferedOutputStream
		BufferedReader
		BufferedWriter
	打印
		PrintStream
		PrintWriter

	对象序列化
		ObjectInputStream
		ObjectOutputSTream

	转换
		InputStreamReader
		OutputStreamWriter

	文件
		FileInputStream
		OutputStream
		FileReader
		FileWriter

	数组
		字节数组
			ByteArrayInputStream
			ByteArrayOutputStream
		字符数组
			CharArrayReader
			CharArrayWriter

	管道
		PipedInputStream
		PipedOutputStream
		PipedReader
		PipedWriter

InputStream及其子类
	FileInputStream 文件输入流：FileInputStream类创建一个能从文件读取字节的InputStream类
	ByteArrayInputStream 字节数组输入流：把内存中的一个缓冲区作为InputStream使用
	PipedInputStream 管道输入流：实现了pipe管道的概念，主要在线程中使用
	SequenceInputStream 顺序输入流：把多个InputStream合并为一个InputStream
	FilterInputStream 过滤输入流：其他输入流的包装
	ObjectInputStream 反序列化输入流：将之前使用ObjectOutputStream序列化的原始数据恢复成对象，以流的方式读取对象
	DataInputStream 数据输入流允许应用程序以与机器无关方式从底层输入流中读取基本Java数据类型
	PushbackInputStream 推回输入流：缓存的一个新颖的用法是实现推回（pushback）。Pushback用于输入流允许字节被读取然后返回到流

OutputStream及其子类
	FileOutputStream 文件输出流：该类实现了一个输出流，其数据写入文件
	ByteArrayOutputStream 字节数组输出流：该类实现了一个输出流，其数据被写入由byte数组充当的缓冲区，缓冲区会随着数据的不断写入二自动增长
	PipedOutputStream 管道输出流：管道的输出流，是管道的发起端
	ObjectOutputStream 基本类型输出流：该类将序列化的对象写入指定地方
	FilterOutputStream 过滤输出流：其他输出流的包装类
	PrintStream 打印流：通过PrintStream可以将文字打印到文件或者网络中
	DataOutputStream 数据输出流：允许应用程序以与机器无关方式向底层输出流中写入Java数据类型

Reader及其子类
	FileReader 文件字符输入流：把文件转换为字符流读入
	CharArrayReader 字符数组输入流：是一个把字符数组作为源的输入流的实现
	BufferedReader 缓冲区输入流：BufferedReader类从字符输入流中读取文本并缓冲字符，以便有效的读取字符、数组和行
	PushbackReader ：PushbackReader允许一个或多个字符被送回输入流
	PipedReader 管道输入流：主要用来线程间通讯，不过这个可以用来传输字符

Writer及其子类
	FilerWriter 字符输出流：FileWriter创建一个可以写入文件的Writer类
	CharArrayWriter 字符数组输出流：CharArrayWriter实现了以数组为目标的输出流
	BufferedWriter 缓冲区输出区：BufferedWriter是一个增加了flush()方法的Writer。flush()方法可以用来确保数据缓冲器被写到了实际的输出流
	PrintWriter：PrintStream的字符形式的版本
	PipedWriter 管道输出流：线程间通讯，不过这个可以用来传输字符
