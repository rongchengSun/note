强引用（强可达）
	对象刚被创、初始化、使用中的对象都是出于强可达状态
	当内存空间不足，Java虚拟机宁愿抛出OOM（OutOfMemoryError）错误，使程序异常终止，也不会回收这种对象
	中断强引用
		将引用设置为null
		数组.clear()

软引用（软可达）
	用来描述一些有用但并不是必须的对象，用java.lang.ref.SoftReference类表示
	对于软引用关联着的对象，只有在内存不足的时候JVM才会回收该对象
	应用场景
		网页缓存、图片缓存
	软引用可以和一个引用队列（ReferenceQueue）联合使用，如果软引用所引用的对象呗JVM回收，这个软引用就会被加入到与之关联的引用队列中

弱引用（弱可达）
	用来描述非必须对象的，当JVM进行垃圾回收时，无论内存是否充足，都会回收被弱引用关联的对象。用java.lang.ref.WeakReference类表示

	弱引用和软引用区别
		只具有弱引用的对象具有更短的生命周期
		被软引用关联的对象只有在内存不足时才会被回收，被弱引用关联的对象在JVM进行垃圾回收时总会被回收

虚引用（幻想可达）
	不影响对象的生命周期，在java.lang.ref.PhantomReference类表示
	如果一个对象与虚引用关联。则跟没有引用关联一样，在任何时候都可能被垃圾回收器回收。虚引用主要用来跟踪对象被垃圾回收的活动
	虚引用必须和引用队列关联使用
